#include <iostream>
#include <vector>
#include <algorithm> // for std::swap
#include <locale>   // for setlocale


// Функция для построения кучи (максимальной кучи)
void heapify(std::vector<int>& arr, int n, int i) {
    int largest = i; // Инициализация наибольшего элемента как корень
    int l = 2 * i + 1; // Левый дочерний элемент
    int r = 2 * i + 2; // Правый дочерний элемент

    // Если левый дочерний элемент больше корня
    if (l < n && arr[l] > arr[largest])
        largest = l;

    // Если правый дочерний элемент больше, чем самый большой до сих пор
    if (r < n && arr[r] > arr[largest])
        largest = r;

    // Если самый большой элемент не корень
    if (largest != i) {
        // Обмен корня с самым большим элементом
        std::swap(arr[i], arr[largest]);

        // Рекурсивный вызов heapify для поддерева
        heapify(arr, n, largest);
    }
}

// Функция для сортировки массива с помощью пирамидальной сортировки
void heapSort(std::vector<int>& arr) {
    int n = arr.size();

    // Построение кучи (максимальной кучи)
    for (int i = n / 2 - 1; i >= 0; i--)
        heapify(arr, n, i);

    // Один за другим извлекаем элементы из кучи
    for (int i = n - 1; i > 0; i--) {
        // Перемещаем текущий корень в конец
        std::swap(arr[0], arr[i]);

        // Вызываем heapify на уменьшенной куче
        heapify(arr, i, 0);
    }
}

// Функция для проверки отсортированности массива
bool isSorted(const std::vector<int>& arr) {
    for (size_t i = 1; i < arr.size(); ++i) {
        if (arr[i] < arr[i - 1]) {
            return false;
        }
    }
    return true;
}

// Функция для вывода массива
void printArray(const std::vector<int>& arr) {
    for (int x : arr) {
        std::cout << x << " ";
    }
    std::cout << std::endl;
}

int main() {
    setlocale(LC_ALL, "ru"); // Установка русской локали

    std::vector<int> arr = { 12, 11, 13, 5, 6, 7, 1, 99, 0, -5 };

    std::cout << "Неотсортированный массив: ";
    printArray(arr);

    heapSort(arr);

    std::cout << "Отсортированный массив: ";
    printArray(arr);

    std::cout << "Отсортирован ли массив? " << (isSorted(arr) ? "Да" : "Нет") << std::endl;

    return 0;
}
